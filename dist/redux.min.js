!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports["pedrofurtado-redux"]=e():t["pedrofurtado-redux"]=e()}(this,function(){return function(t){function e(r){if(o[r])return o[r].exports;var n=o[r]={exports:{},id:r,loaded:!1};return t[r].call(n.exports,n,n.exports,e),n.loaded=!0,n.exports}var o={};return e.m=t,e.c=o,e.p="",e(0)}([function(t,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r=function(t){if("object"!==(void 0===t?"undefined":o(t))||null===t)return!1;for(var e=t;null!==Object.getPrototypeOf(e);)e=Object.getPrototypeOf(e);return Object.getPrototypeOf(t)===e},n=function(t){if(!r(t))throw"The reducers must be placed in a plain object.";for(var e in t){if("function"!=typeof t[e])throw"Reducers must be a function."}return t},u=function(t){var e={},o=[],r=n(t),u=function(t){var o={};for(var n in r){var u=r[n];o[n]=u(e[n],t)}e=o},f=function(){o.forEach(function(t){return t()})},c=function(t){u(t),f()},i=function(t){o.push(t)};return c({type:"REDUX_INITIAL_ACTION"}),{getState:function(){return e},dispatch:c,subscribe:i}};e.createStore=u,e.combineReducers=n}])});
//# sourceMappingURL=redux.min.js.map
