!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports["pedrofurtado-redux"]=e():t["pedrofurtado-redux"]=e()}(this,function(){return function(o){var r={};function n(t){if(r[t])return r[t].exports;var e=r[t]={exports:{},id:t,loaded:!1};return o[t].call(e.exports,e,e.exports,n),e.loaded=!0,e.exports}return n.m=o,n.c=r,n.p="",n(0)}([function(t,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r=function(t){if(!function(t){if("object"!==(void 0===t?"undefined":o(t))||null===t)return!1;for(var e=t;null!==Object.getPrototypeOf(e);)e=Object.getPrototypeOf(e);return Object.getPrototypeOf(t)===e}(t))throw"The reducers must be placed in a plain object.";for(var e in t){if("function"!=typeof t[e])throw"Reducers must be a function."}return t};e.createStore=function(t){var n={},e=[],u=r(t),o=function(t){!function(t){var e={};for(var o in u){var r=u[o];e[o]=r(n[o],t)}n=e}(t),e.forEach(function(t){return t()})};return o({type:"REDUX_INITIAL_ACTION"}),{getState:function(){return n},dispatch:o,subscribe:function(t){e.push(t)}}},e.combineReducers=r}])});
//# sourceMappingURL=redux.min.js.map
